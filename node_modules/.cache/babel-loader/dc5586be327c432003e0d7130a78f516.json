{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEndDrag = createEndDrag;\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nvar _typesJs = require(\"./types.js\");\n\nfunction createEndDrag(manager) {\n  return function endDrag() {\n    const monitor = manager.getMonitor();\n    const registry = manager.getRegistry();\n    verifyIsDragging(monitor);\n    const sourceId = monitor.getSourceId();\n\n    if (sourceId != null) {\n      const source = registry.getSource(sourceId, true);\n      source.endDrag(monitor, sourceId);\n      registry.unpinSource();\n    }\n\n    return {\n      type: _typesJs.END_DRAG\n    };\n  };\n}\n\nfunction verifyIsDragging(monitor) {\n  (0, _invariant).invariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.');\n}","map":{"version":3,"mappings":";;;;;QAQgBA;;AARU,cAAsB,kCAAtB;;AAMD,YAAY,wBAAZ;;SAETA,cAAcC,SAA0B;AACvD,SAAO,SAASC,OAAT,GAAmC;AACzC,UAAMC,OAAO,GAAGF,OAAO,CAACG,UAARH,EAAhB;AACA,UAAMI,QAAQ,GAAGJ,OAAO,CAACK,WAARL,EAAjB;AACAM,oBAAgB,CAACJ,OAAD,CAAhBI;AAEA,UAAMC,QAAQ,GAAGL,OAAO,CAACM,WAARN,EAAjB;;AACA,QAAIK,QAAQ,IAAI,IAAhB,EAAsB;AACrB,YAAME,MAAM,GAAGL,QAAQ,CAACM,SAATN,CAAmBG,QAAnBH,EAA6B,IAA7BA,CAAf;AACAK,YAAM,CAACR,OAAPQ,CAAeP,OAAfO,EAAwBF,QAAxBE;AACAL,cAAQ,CAACO,WAATP;AACA;;AACD,WAAO;AAAEQ,UAAI,EAAEC,QAAQ;AAAhB,KAAP;AACA,GAZD;AAaA;;SAEQP,iBAAiBJ,SAA0B;MACnDY,YAASA,UAACZ,OAAO,CAACa,UAARb,IAAsB;AAChC","names":["createEndDrag","manager","endDrag","monitor","getMonitor","registry","getRegistry","verifyIsDragging","sourceId","getSourceId","source","getSource","unpinSource","type","END_DRAG","invariant","isDragging"],"sources":["/Users/davidandtiana/Downloads/chillibean-test/node_modules/dnd-core/src/actions/dragDrop/endDrag.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tSentinelAction,\n\tDragDropMonitor,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n"]},"metadata":{},"sourceType":"script"}