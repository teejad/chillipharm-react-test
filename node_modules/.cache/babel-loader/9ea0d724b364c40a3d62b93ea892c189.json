{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerTarget = registerTarget;\nexports.registerSource = registerSource;\n\nfunction registerTarget(type, target, manager) {\n  const registry = manager.getRegistry();\n  const targetId = registry.addTarget(type, target);\n  return [targetId, () => registry.removeTarget(targetId)];\n}\n\nfunction registerSource(type, source, manager) {\n  const registry = manager.getRegistry();\n  const sourceId = registry.addSource(type, source);\n  return [sourceId, () => registry.removeSource(sourceId)];\n}","map":{"version":3,"mappings":";;;;;QAUgBA;QAWAC;;SAXAD,eACfE,MACAC,QACAC,SAC4B;AAC5B,QAAMC,QAAQ,GAAGD,OAAO,CAACE,WAARF,EAAjB;AACA,QAAMG,QAAQ,GAAGF,QAAQ,CAACG,SAATH,CAAmBH,IAAnBG,EAAyBF,MAAzBE,CAAjB;AAEA,SAAO,CAACE,QAAD,QAAiBF,QAAQ,CAACI,YAATJ,CAAsBE,QAAtBF,CAAjB,CAAP;AACA;;SAEeJ,eACfC,MACAQ,QACAN,SAC4B;AAC5B,QAAMC,QAAQ,GAAGD,OAAO,CAACE,WAARF,EAAjB;AACA,QAAMO,QAAQ,GAAGN,QAAQ,CAACO,SAATP,CAAmBH,IAAnBG,EAAyBK,MAAzBL,CAAjB;AAEA,SAAO,CAACM,QAAD,QAAiBN,QAAQ,CAACQ,YAATR,CAAsBM,QAAtBN,CAAjB,CAAP;AACA","names":["registerTarget","registerSource","type","target","manager","registry","getRegistry","targetId","addTarget","removeTarget","source","sourceId","addSource","removeSource"],"sources":["/Users/davidandtiana/Downloads/chillibean-test/node_modules/react-dnd/src/internals/registration.ts"],"sourcesContent":["import type {\n\tDragDropManager,\n\tDropTarget,\n\tUnsubscribe,\n\tIdentifier,\n\tTargetType,\n\tSourceType,\n\tDragSource,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n"]},"metadata":{},"sourceType":"script"}