{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNativeDragSource = createNativeDragSource;\nexports.matchNativeItemType = matchNativeItemType;\n\nvar _nativeTypesConfigJs = require(\"./nativeTypesConfig.js\");\n\nvar _nativeDragSourceJs = require(\"./NativeDragSource.js\");\n\nfunction createNativeDragSource(type, dataTransfer) {\n  const config = _nativeTypesConfigJs.nativeTypesConfig[type];\n\n  if (!config) {\n    throw new Error(`native type ${type} has no configuration`);\n  }\n\n  const result = new _nativeDragSourceJs.NativeDragSource(config);\n  result.loadDataTransfer(dataTransfer);\n  return result;\n}\n\nfunction matchNativeItemType(dataTransfer) {\n  if (!dataTransfer) {\n    return null;\n  }\n\n  const dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || []);\n  return Object.keys(_nativeTypesConfigJs.nativeTypesConfig).filter(nativeItemType => {\n    const typeConfig = _nativeTypesConfigJs.nativeTypesConfig[nativeItemType];\n\n    if (!(typeConfig === null || typeConfig === void 0 ? void 0 : typeConfig.matchesTypes)) {\n      return false;\n    }\n\n    return typeConfig.matchesTypes.some(t => dataTransferTypes.indexOf(t) > -1);\n  })[0] || null;\n}","map":{"version":3,"mappings":";;;;;QAGgBA;QAaAC;;AAhBkB,wBAAwB,oCAAxB;;AACD,uBAAuB,mCAAvB;;SAEjBD,uBACfE,MACAC,cACmB;AACnB,QAAMC,MAAM,GAAGC,oBAAiB,kBAAjBA,CAAkBH,IAAlBG,CAAf;;AACA,MAAE,CAAGD,MAAL,EAAa;AACZ,UAAM,IAAIE,KAAJ,CAAW,eAAcJ,IAAK,uBAA9B,CAAN;AACA;;AACD,QAAMK,MAAM,GAAG,IAAIC,mBAAgB,iBAApB,CAAqBJ,MAArB,CAAf;AACAG,QAAM,CAACE,gBAAPF,CAAwBJ,YAAxBI;AACA,SAAOA,MAAP;AACA;;SAEeN,oBACfE,cACgB;AAChB,MAAE,CAAGA,YAAL,EAAmB;AAClB,WAAO,IAAP;AACA;;AAED,QAAMO,iBAAiB,GAAGC,KAAK,CAACC,SAAND,CAAgBE,KAAhBF,CAAsBG,IAAtBH,CAA2BR,YAAY,CAACY,KAAbZ,IAAsB,EAAjDQ,CAA1B;AACA,SACCK,MAAM,CAACC,IAAPD,CAAYX,oBAAiB,kBAA7BW,EAA+BE,MAA/BF,CAAuCG,cAAF,IAAqB;AACzD,UAAMC,UAAU,GAAGf,oBAAiB,kBAAjBA,CAAkBc,cAAlBd,CAAnB;;AACA,QAAE,EAAGe,UAAU,SAAVA,cAAU,KAAVA,4BAAU,CAAEC,YAAf,CAAF,EAA+B;AAC9B,aAAO,KAAP;AACA;;AACD,WAAOD,UAAU,CAACC,YAAXD,CAAwBE,IAAxBF,CACLG,CADiC,IAC3Bb,iBAAiB,CAACc,OAAlBd,CAA0Ba,CAA1Bb,IAA2B,CAAK,CADjCU,CAAP;AAGA,GARDJ,EAQG,CARHA,KAQS,IATV;AAWA","names":["createNativeDragSource","matchNativeItemType","type","dataTransfer","config","nativeTypesConfig","Error","result","NativeDragSource","loadDataTransfer","dataTransferTypes","Array","prototype","slice","call","types","Object","keys","filter","nativeItemType","typeConfig","matchesTypes","some","t","indexOf"],"sources":["/Users/davidandtiana/Downloads/chillibean-test/node_modules/react-dnd-html5-backend/src/NativeDragSources/index.ts"],"sourcesContent":["import { nativeTypesConfig } from './nativeTypesConfig.js'\nimport { NativeDragSource } from './NativeDragSource.js'\n\nexport function createNativeDragSource(\n\ttype: string,\n\tdataTransfer?: DataTransfer,\n): NativeDragSource {\n\tconst config = nativeTypesConfig[type]\n\tif (!config) {\n\t\tthrow new Error(`native type ${type} has no configuration`)\n\t}\n\tconst result = new NativeDragSource(config)\n\tresult.loadDataTransfer(dataTransfer)\n\treturn result\n}\n\nexport function matchNativeItemType(\n\tdataTransfer: DataTransfer | null,\n): string | null {\n\tif (!dataTransfer) {\n\t\treturn null\n\t}\n\n\tconst dataTransferTypes = Array.prototype.slice.call(dataTransfer.types || [])\n\treturn (\n\t\tObject.keys(nativeTypesConfig).filter((nativeItemType) => {\n\t\t\tconst typeConfig = nativeTypesConfig[nativeItemType]\n\t\t\tif (!typeConfig?.matchesTypes) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn typeConfig.matchesTypes.some(\n\t\t\t\t(t) => dataTransferTypes.indexOf(t) > -1,\n\t\t\t)\n\t\t})[0] || null\n\t)\n}\n"]},"metadata":{},"sourceType":"script"}