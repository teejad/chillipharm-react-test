{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nlet isCallingCanDrop = false;\n\nclass DropTargetMonitorImpl {\n  receiveHandlerId(targetId) {\n    this.targetId = targetId;\n  }\n\n  getHandlerId() {\n    return this.targetId;\n  }\n\n  subscribeToStateChange(listener, options) {\n    return this.internalMonitor.subscribeToStateChange(listener, options);\n  }\n\n  canDrop() {\n    // Cut out early if the target id has not been set. This should prevent errors\n    // where the user has an older version of dnd-core like in\n    // https://github.com/react-dnd/react-dnd/issues/1310\n    if (!this.targetId) {\n      return false;\n    }\n\n    (0, _invariant).invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n\n    try {\n      isCallingCanDrop = true;\n      return this.internalMonitor.canDropOnTarget(this.targetId);\n    } finally {\n      isCallingCanDrop = false;\n    }\n  }\n\n  isOver(options) {\n    if (!this.targetId) {\n      return false;\n    }\n\n    return this.internalMonitor.isOverTarget(this.targetId, options);\n  }\n\n  getItemType() {\n    return this.internalMonitor.getItemType();\n  }\n\n  getItem() {\n    return this.internalMonitor.getItem();\n  }\n\n  getDropResult() {\n    return this.internalMonitor.getDropResult();\n  }\n\n  didDrop() {\n    return this.internalMonitor.didDrop();\n  }\n\n  getInitialClientOffset() {\n    return this.internalMonitor.getInitialClientOffset();\n  }\n\n  getInitialSourceClientOffset() {\n    return this.internalMonitor.getInitialSourceClientOffset();\n  }\n\n  getSourceClientOffset() {\n    return this.internalMonitor.getSourceClientOffset();\n  }\n\n  getClientOffset() {\n    return this.internalMonitor.getClientOffset();\n  }\n\n  getDifferenceFromInitialOffset() {\n    return this.internalMonitor.getDifferenceFromInitialOffset();\n  }\n\n  constructor(manager) {\n    this.targetId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n}\n\nexports.DropTargetMonitorImpl = DropTargetMonitorImpl;","map":{"version":3,"mappings":";;;;;;AAQ0B,cAAsB,kCAAtB;;AAG1B,IAAIA,gBAAgB,GAAG,KAAvB;;MAEaC,sBAAqB;AAQ1BC,kBAAgB,CAACC,QAAD,EAAoC;AAC1D,SAAKA,QAAL,GAAgBA,QAAhB;AACA;;AAEMC,cAAY,GAAsB;AACxC,WAAO,KAAKD,QAAZ;AACA;;AAEME,wBAAsB,CAC5BC,QAD4B,EAE5BC,OAF4B,EAGd;AACd,WAAO,KAAKC,eAAL,CAAqBH,sBAArB,CAA4CC,QAA5C,EAAsDC,OAAtD,CAAP;AACA;;AAEME,SAAO,GAAY;AACzB;AACA;AACA;AACA,QAAE,CAAG,KAAKN,QAAV,EAAoB;AACnB,aAAO,KAAP;AACA;;QACDO,YAASA,WACPV,kBACD,8EACC;;AAGF,QAAI;AACHA,sBAAgB,GAAG,IAAnBA;AACA,aAAO,KAAKQ,eAAL,CAAqBG,eAArB,CAAqC,KAAKR,QAA1C,CAAP;AACA,KAHD,SAGU;AACTH,sBAAgB,GAAG,KAAnBA;AACA;AACD;;AAEMY,QAAM,CAACL,OAAD,EAA2C;AACvD,QAAE,CAAG,KAAKJ,QAAV,EAAoB;AACnB,aAAO,KAAP;AACA;;AACD,WAAO,KAAKK,eAAL,CAAqBK,YAArB,CAAkC,KAAKV,QAAvC,EAAiDI,OAAjD,CAAP;AACA;;AAEMO,aAAW,GAAsB;AACvC,WAAO,KAAKN,eAAL,CAAqBM,WAArB,EAAP;AACA;;AAEMC,SAAO,GAAQ;AACrB,WAAO,KAAKP,eAAL,CAAqBO,OAArB,EAAP;AACA;;AAEMC,eAAa,GAAQ;AAC3B,WAAO,KAAKR,eAAL,CAAqBQ,aAArB,EAAP;AACA;;AAEMC,SAAO,GAAY;AACzB,WAAO,KAAKT,eAAL,CAAqBS,OAArB,EAAP;AACA;;AAEMC,wBAAsB,GAAmB;AAC/C,WAAO,KAAKV,eAAL,CAAqBU,sBAArB,EAAP;AACA;;AAEMC,8BAA4B,GAAmB;AACrD,WAAO,KAAKX,eAAL,CAAqBW,4BAArB,EAAP;AACA;;AAEMC,uBAAqB,GAAmB;AAC9C,WAAO,KAAKZ,eAAL,CAAqBY,qBAArB,EAAP;AACA;;AAEMC,iBAAe,GAAmB;AACxC,WAAO,KAAKb,eAAL,CAAqBa,eAArB,EAAP;AACA;;AAEMC,gCAA8B,GAAmB;AACvD,WAAO,KAAKd,eAAL,CAAqBc,8BAArB,EAAP;AACA;;cAjFkBC,SAA0B;AAJvC,SAEEpB,QAFF,GAEgC,IAFhC;AAKL,SAAKK,eAAL,GAAuBe,OAAO,CAACC,UAARD,EAAvB;AACA;;AANgC;;QAArBtB","names":["isCallingCanDrop","DropTargetMonitorImpl","receiveHandlerId","targetId","getHandlerId","subscribeToStateChange","listener","options","internalMonitor","canDrop","invariant","canDropOnTarget","isOver","isOverTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","manager","getMonitor"],"sources":["/Users/davidandtiana/Downloads/chillibean-test/node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts"],"sourcesContent":["import type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tUnsubscribe,\n\tListener,\n\tIdentifier,\n\tXYCoord,\n} from 'dnd-core'\nimport { invariant } from '@react-dnd/invariant'\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}