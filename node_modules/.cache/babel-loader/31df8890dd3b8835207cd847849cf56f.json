{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDragDropManager = useDragDropManager;\n\nvar _react = require(\"react\");\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nvar _indexJs = require(\"../core/index.js\");\n\nfunction useDragDropManager() {\n  const {\n    dragDropManager\n  } = (0, _react).useContext(_indexJs.DndContext);\n  (0, _invariant).invariant(dragDropManager != null, 'Expected drag drop context');\n  return dragDropManager;\n}","map":{"version":3,"mappings":";;;;;QAQgBA;;AARW,UAAO,mBAAP;;AAED,cAAsB,kCAAtB;;AACC,YAAkB,8BAAlB;;SAKXA,qBAAsC;AACrD,QAAM;AAAEC;AAAF,MAAmB,IAAGC,MAAH,EAAaA,UAAb,CAAcC,QAAU,WAAxB,CAAzB;MACAC,YAASA,UAACH,eAAe,IAAI,MAAM;AACnC,SAAOA,eAAP;AACA","names":["useDragDropManager","dragDropManager","useContext","DndContext","invariant"],"sources":["/Users/davidandtiana/Downloads/chillibean-test/node_modules/react-dnd/src/hooks/useDragDropManager.ts"],"sourcesContent":["import { useContext } from 'react'\nimport type { DragDropManager } from 'dnd-core'\nimport { invariant } from '@react-dnd/invariant'\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n"]},"metadata":{},"sourceType":"script"}