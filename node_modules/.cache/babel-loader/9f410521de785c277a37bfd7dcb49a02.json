{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDropTargetConnector = useDropTargetConnector;\n\nvar _react = require(\"react\");\n\nvar _indexJs = require(\"../../internals/index.js\");\n\nvar _useDragDropManagerJs = require(\"../useDragDropManager.js\");\n\nvar _useIsomorphicLayoutEffectJs = require(\"../useIsomorphicLayoutEffect.js\");\n\nfunction useDropTargetConnector(options) {\n  const manager = (0, _useDragDropManagerJs).useDragDropManager();\n  const connector = (0, _react).useMemo(() => new _indexJs.TargetConnector(manager.getBackend()), [manager]);\n  (0, _useIsomorphicLayoutEffectJs).useIsomorphicLayoutEffect(() => {\n    connector.dropTargetOptions = options || null;\n    connector.reconnect();\n    return () => connector.disconnectDropTarget();\n  }, [options]);\n  return connector;\n}","map":{"version":3,"mappings":";;;;;QAMgBA;;AANQ,UAAO,mBAAP;;AACQ,YAA0B,sCAA1B;;AAEG,yBAA0B,sCAA1B;;AACO,gCAAiC,6CAAjC;;SAE1BA,uBACfC,SACkB;AAClB,QAAMC,OAAO,OAAGC,qBAAH,EAAqBA,kBAArB,EAAb;AACA,QAAMC,SAAS,OAAGC,MAAH,EAAUA,OAAV,CAAU,MAClB,IAAIC,QAAe,gBAAnB,CAAoBJ,OAAO,CAACK,UAARL,EAApB,CADQ,EAEd,CAACA,OAAD,CAFc,CAAf;MAIAM,8BAAyBA,gCAAO;AAC/BJ,aAAS,CAACK,iBAAVL,GAA8BH,OAAO,IAAI,IAAzCG;AACAA,aAAS,CAACM,SAAVN;AACA,WAAM,MAAOA,SAAS,CAACO,oBAAVP,EAAb;AACA,KAAE,CAACH,OAAD;AACH,SAAOG,SAAP;AACA","names":["useDropTargetConnector","options","manager","useDragDropManager","connector","useMemo","TargetConnector","getBackend","useIsomorphicLayoutEffect","dropTargetOptions","reconnect","disconnectDropTarget"],"sources":["/Users/davidandtiana/Downloads/chillibean-test/node_modules/react-dnd/src/hooks/useDrop/useDropTargetConnector.ts"],"sourcesContent":["import { useMemo } from 'react'\nimport { TargetConnector } from '../../internals/index.js'\nimport type { DropTargetOptions } from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDropTargetConnector(\n\toptions: DropTargetOptions,\n): TargetConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new TargetConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dropTargetOptions = options || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDropTarget()\n\t}, [options])\n\treturn connector\n}\n"]},"metadata":{},"sourceType":"script"}