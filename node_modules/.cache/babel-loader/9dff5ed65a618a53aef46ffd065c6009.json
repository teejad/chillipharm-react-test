{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nativeTypesConfig = void 0;\n\nvar NativeTypes = _interopRequireWildcard(require(\"../NativeTypes.js\"));\n\nvar _getDataFromDataTransferJs = require(\"./getDataFromDataTransfer.js\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nconst nativeTypesConfig = {\n  [NativeTypes.FILE]: {\n    exposeProperties: {\n      files: dataTransfer => Array.prototype.slice.call(dataTransfer.files),\n      items: dataTransfer => dataTransfer.items,\n      dataTransfer: dataTransfer => dataTransfer\n    },\n    matchesTypes: ['Files']\n  },\n  [NativeTypes.HTML]: {\n    exposeProperties: {\n      html: (dataTransfer, matchesTypes) => (0, _getDataFromDataTransferJs).getDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n      dataTransfer: dataTransfer => dataTransfer\n    },\n    matchesTypes: ['Html', 'text/html']\n  },\n  [NativeTypes.URL]: {\n    exposeProperties: {\n      urls: (dataTransfer, matchesTypes) => (0, _getDataFromDataTransferJs).getDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n      dataTransfer: dataTransfer => dataTransfer\n    },\n    matchesTypes: ['Url', 'text/uri-list']\n  },\n  [NativeTypes.TEXT]: {\n    exposeProperties: {\n      text: (dataTransfer, matchesTypes) => (0, _getDataFromDataTransferJs).getDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n      dataTransfer: dataTransfer => dataTransfer\n    },\n    matchesTypes: ['Text', 'text/plain']\n  }\n};\nexports.nativeTypesConfig = nativeTypesConfig;","map":{"version":3,"mappings":";;;;;;;AAAYA,eAAW,wDAAXA;;AAC4B,8BAA8B,0CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcjC,MAAMC,iBAAiB,GAE1B;GACFD,WAAW,CAACE,OAAO;AACnBC,oBAAgB,EAAE;AACjBC,WAAK,EAAGC,YAAH,IACJC,KAAK,CAACC,SAAND,CAAgBE,KAAhBF,CAAsBG,IAAtBH,CAA2BD,YAAY,CAACD,KAAxCE,CAFgB;AAGjBI,WAAK,EAAGL,YAAH,IACJA,YAAY,CAACK,KAJG;AAKjBL,kBAAY,EAAGA,YAAH,IAAgDA;AAL3C,KADC;AAQnBM,gBAAY,EAAE,CAAC,OAAD;AARK,GADjB;GAWFX,WAAW,CAACY,OAAO;AACnBT,oBAAgB,EAAE;AACjBU,UAAI,GAAGR,YAAH,EAA+BM,YAA/B,KAAqD,IACxDG,0BADwD,EACjCA,uBADiC,CAChCT,YADgC,EAClBM,YADkB,EACJ,EADI,CADxC;AAGjBN,kBAAY,EAAGA,YAAH,IAAgDA;AAH3C,KADC;AAMnBM,gBAAY,EAAE,CAAC,MAAD,EAAS,WAAT;AANK,GAXjB;GAmBFX,WAAW,CAACe,MAAM;AAClBZ,oBAAgB,EAAE;AACjBa,UAAI,GAAGX,YAAH,EAA+BM,YAA/B,KAAqD,IACxDG,0BADwD,EACjCA,uBADiC,CAChCT,YADgC,EAClBM,YADkB,EACJ,EADI,EACAM,KADA,CACM,IADN,CADxC;AAGjBZ,kBAAY,EAAGA,YAAH,IAAgDA;AAH3C,KADA;AAMlBM,gBAAY,EAAE,CAAC,KAAD,EAAQ,eAAR;AANI,GAnBhB;GA2BFX,WAAW,CAACkB,OAAO;AACnBf,oBAAgB,EAAE;AACjBgB,UAAI,GAAGd,YAAH,EAA+BM,YAA/B,KAAqD,IACxDG,0BADwD,EACjCA,uBADiC,CAChCT,YADgC,EAClBM,YADkB,EACJ,EADI,CADxC;AAGjBN,kBAAY,EAAGA,YAAH,IAAgDA;AAH3C,KADC;AAMnBM,gBAAY,EAAE,CAAC,MAAD,EAAS,YAAT;AANK;AA3BjB,CAFG;QAAMV","names":["NativeTypes","nativeTypesConfig","FILE","exposeProperties","files","dataTransfer","Array","prototype","slice","call","items","matchesTypes","HTML","html","getDataFromDataTransfer","URL","urls","split","TEXT","text"],"sources":["/Users/davidandtiana/Downloads/chillibean-test/node_modules/react-dnd-html5-backend/src/NativeDragSources/nativeTypesConfig.ts"],"sourcesContent":["import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n"]},"metadata":{},"sourceType":"script"}