{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add = add;\nexports.subtract = subtract;\nexports.getSourceClientOffset = getSourceClientOffset;\nexports.getDifferenceFromInitialOffset = getDifferenceFromInitialOffset;\n\nfunction add(a, b) {\n  return {\n    x: a.x + b.x,\n    y: a.y + b.y\n  };\n}\n\nfunction subtract(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction getSourceClientOffset(state) {\n  const {\n    clientOffset,\n    initialClientOffset,\n    initialSourceClientOffset\n  } = state;\n\n  if (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n    return null;\n  }\n\n  return subtract(add(clientOffset, initialSourceClientOffset), initialClientOffset);\n}\n\nfunction getDifferenceFromInitialOffset(state) {\n  const {\n    clientOffset,\n    initialClientOffset\n  } = state;\n\n  if (!clientOffset || !initialClientOffset) {\n    return null;\n  }\n\n  return subtract(clientOffset, initialClientOffset);\n}","map":{"version":3,"mappings":";;;;;QAQgBA;QAYAC;QAeAC;QAgBAC;;SA3CAH,IAAII,GAAYC,GAAqB;AACpD,SAAO;AACNC,KAAC,EAAEF,CAAC,CAACE,CAAFF,GAAMC,CAAC,CAACC,CADL;AAENC,KAAC,EAAEH,CAAC,CAACG,CAAFH,GAAMC,CAAC,CAACE;AAFL,GAAP;AAIA;;SAOeN,SAASG,GAAYC,GAAqB;AACzD,SAAO;AACNC,KAAC,EAAEF,CAAC,CAACE,CAAFF,GAAMC,CAAC,CAACC,CADL;AAENC,KAAC,EAAEH,CAAC,CAACG,CAAFH,GAAMC,CAAC,CAACE;AAFL,GAAP;AAIA;;SAUeL,sBAAsBM,OAA8B;AACnE,QAAM;AAAEC,gBAAF;AAAgBC,uBAAhB;AAAqCC;AAArC,MAAmEH,KAAzE;;AACA,MAAE,CAAGC,YAAH,IAAe,CAAKC,mBAApB,IAAuC,CAAKC,yBAA9C,EAAyE;AACxE,WAAO,IAAP;AACA;;AACD,SAAOV,QAAQ,CACdD,GAAG,CAACS,YAAD,EAAeE,yBAAf,CADW,EAEdD,mBAFc,CAAf;AAIA;;SAOeP,+BAA+BK,OAA8B;AAC5E,QAAM;AAAEC,gBAAF;AAAgBC;AAAhB,MAAwCF,KAA9C;;AACA,MAAE,CAAGC,YAAH,IAAe,CAAKC,mBAAtB,EAA2C;AAC1C,WAAO,IAAP;AACA;;AACD,SAAOT,QAAQ,CAACQ,YAAD,EAAeC,mBAAf,CAAf;AACA","names":["add","subtract","getSourceClientOffset","getDifferenceFromInitialOffset","a","b","x","y","state","clientOffset","initialClientOffset","initialSourceClientOffset"],"sources":["/Users/davidandtiana/Downloads/chillibean-test/node_modules/dnd-core/src/utils/coords.ts"],"sourcesContent":["import type { State } from '../reducers/dragOffset.js'\nimport type { XYCoord } from '../interfaces.js'\n\n/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x + b.x,\n\t\ty: a.y + b.y,\n\t}\n}\n\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a: XYCoord, b: XYCoord): XYCoord {\n\treturn {\n\t\tx: a.x - b.x,\n\t\ty: a.y - b.y,\n\t}\n}\n\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset, initialSourceClientOffset } = state\n\tif (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(\n\t\tadd(clientOffset, initialSourceClientOffset),\n\t\tinitialClientOffset,\n\t)\n}\n\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state: State): XYCoord | null {\n\tconst { clientOffset, initialClientOffset } = state\n\tif (!clientOffset || !initialClientOffset) {\n\t\treturn null\n\t}\n\treturn subtract(clientOffset, initialClientOffset)\n}\n"]},"metadata":{},"sourceType":"script"}