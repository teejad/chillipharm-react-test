{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDrop = createDrop;\n\nvar _invariant = require(\"@react-dnd/invariant\");\n\nvar _typesJs = require(\"./types.js\");\n\nvar _jsUtilsJs = require(\"../../utils/js_utils.js\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction createDrop(manager) {\n  return function drop() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const monitor = manager.getMonitor();\n    const registry = manager.getRegistry();\n    verifyInvariants(monitor);\n    const targetIds = getDroppableTargets(monitor); // Multiple actions are dispatched here, which is why this doesn't return an action\n\n    targetIds.forEach((targetId, index) => {\n      const dropResult = determineDropResult(targetId, index, registry, monitor);\n      const action = {\n        type: _typesJs.DROP,\n        payload: {\n          dropResult: _objectSpread({}, options, dropResult)\n        }\n      };\n      manager.dispatch(action);\n    });\n  };\n}\n\nfunction verifyInvariants(monitor) {\n  (0, _invariant).invariant(monitor.isDragging(), 'Cannot call drop while not dragging.');\n  (0, _invariant).invariant(!monitor.didDrop(), 'Cannot call drop twice during one drag operation.');\n}\n\nfunction determineDropResult(targetId, index, registry, monitor) {\n  const target = registry.getTarget(targetId);\n  let dropResult = target ? target.drop(monitor, targetId) : undefined;\n  verifyDropResultType(dropResult);\n\n  if (typeof dropResult === 'undefined') {\n    dropResult = index === 0 ? {} : monitor.getDropResult();\n  }\n\n  return dropResult;\n}\n\nfunction verifyDropResultType(dropResult) {\n  (0, _invariant).invariant(typeof dropResult === 'undefined' || (0, _jsUtilsJs).isObject(dropResult), 'Drop result must either be an object or undefined.');\n}\n\nfunction getDroppableTargets(monitor) {\n  const targetIds = monitor.getTargetIds().filter(monitor.canDropOnTarget, monitor);\n  targetIds.reverse();\n  return targetIds;\n}","map":{"version":3,"mappings":";;;;;QAYgBA;;AAZU,cAAsB,kCAAtB;;AASL,YAAY,wBAAZ;;AACI,cAAyB,qCAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAETA,WAAWC,SAA0B;AACpD,SAAO,SAASC,IAAT,GAAkC;AAAA,QAApBC,OAAoB,uEAAV,EAAU;AACxC,UAAMC,OAAO,GAAGH,OAAO,CAACI,UAARJ,EAAhB;AACA,UAAMK,QAAQ,GAAGL,OAAO,CAACM,WAARN,EAAjB;AACAO,oBAAgB,CAACJ,OAAD,CAAhBI;AACA,UAAMC,SAAS,GAAGC,mBAAmB,CAACN,OAAD,CAArC,CAJwC,CAMxC;;AACAK,aAAS,CAACE,OAAVF,CAAiB,CAAEG,QAAF,EAAYC,KAAZ,KAAsB;AACtC,YAAMC,UAAU,GAAGC,mBAAmB,CAACH,QAAD,EAAWC,KAAX,EAAkBP,QAAlB,EAA4BF,OAA5B,CAAtC;AACA,YAAMY,MAAM,GAAwB;AACnCC,YAAI,EAAEC,QAAI,KADyB;AAEnCC,eAAO,EAAE;AACRL,oBAAU,oBACNX,OADM,EAENW,UAFM;AADF;AAF0B,OAApC;AASAb,aAAO,CAACmB,QAARnB,CAAiBe,MAAjBf;AACA,KAZDQ;AAaA,GApBD;AAqBA;;SAEQD,iBAAiBJ,SAA0B;MACnDiB,YAASA,UAACjB,OAAO,CAACkB,UAARlB,IAAsB;MAChCiB,YAASA,WACPjB,OAAO,CAACmB,OAARnB,IACD;AAED;;SAEQW,oBACRH,UACAC,OACAP,UACAF,SACC;AACD,QAAMoB,MAAM,GAAGlB,QAAQ,CAACmB,SAATnB,CAAmBM,QAAnBN,CAAf;AACA,MAAIQ,UAAU,GAAGU,MAAM,GAAGA,MAAM,CAACtB,IAAPsB,CAAYpB,OAAZoB,EAAqBZ,QAArBY,CAAH,GAAoCE,SAA3D;AACAC,sBAAoB,CAACb,UAAD,CAApBa;;AACA,MAAI,OAAOb,UAAP,KAAsB,WAA1B,EAAuC;AACtCA,cAAU,GAAGD,KAAK,KAAK,CAAVA,GAAc,EAAdA,GAAmBT,OAAO,CAACwB,aAARxB,EAAhCU;AACA;;AACD,SAAOA,UAAP;AACA;;SAEQa,qBAAqBb,YAAiB;MAC9CO,YAASA,UACR,OAAOP,UAAP,KAAsB,WAAtB,IAAiC,IAAIe,UAAJ,EAAYA,QAAZ,CAAaf,UAAb,GACjC;AAED;;SAEQJ,oBAAoBN,SAA0B;AACtD,QAAMK,SAAS,GAAGL,OAAO,CACvB0B,YADgB1B,GAEhB2B,MAFgB3B,CAETA,OAAO,CAAC4B,eAFC5B,EAEgBA,OAFhBA,CAAlB;AAGAK,WAAS,CAACwB,OAAVxB;AACA,SAAOA,SAAP;AACA","names":["createDrop","manager","drop","options","monitor","getMonitor","registry","getRegistry","verifyInvariants","targetIds","getDroppableTargets","forEach","targetId","index","dropResult","determineDropResult","action","type","DROP","payload","dispatch","invariant","isDragging","didDrop","target","getTarget","undefined","verifyDropResultType","getDropResult","isObject","getTargetIds","filter","canDropOnTarget","reverse"],"sources":["/Users/davidandtiana/Downloads/chillibean-test/node_modules/dnd-core/src/actions/dragDrop/drop.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tAction,\n\tDragDropManager,\n\tDropPayload,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../../interfaces.js'\nimport { DROP } from './types.js'\nimport { isObject } from '../../utils/js_utils.js'\n\nexport function createDrop(manager: DragDropManager) {\n\treturn function drop(options = {}): void {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyInvariants(monitor)\n\t\tconst targetIds = getDroppableTargets(monitor)\n\n\t\t// Multiple actions are dispatched here, which is why this doesn't return an action\n\t\ttargetIds.forEach((targetId, index) => {\n\t\t\tconst dropResult = determineDropResult(targetId, index, registry, monitor)\n\t\t\tconst action: Action<DropPayload> = {\n\t\t\t\ttype: DROP,\n\t\t\t\tpayload: {\n\t\t\t\t\tdropResult: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t...dropResult,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\t\t\tmanager.dispatch(action)\n\t\t})\n\t}\n}\n\nfunction verifyInvariants(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call drop while not dragging.')\n\tinvariant(\n\t\t!monitor.didDrop(),\n\t\t'Cannot call drop twice during one drag operation.',\n\t)\n}\n\nfunction determineDropResult(\n\ttargetId: Identifier,\n\tindex: number,\n\tregistry: HandlerRegistry,\n\tmonitor: DragDropMonitor,\n) {\n\tconst target = registry.getTarget(targetId)\n\tlet dropResult = target ? target.drop(monitor, targetId) : undefined\n\tverifyDropResultType(dropResult)\n\tif (typeof dropResult === 'undefined') {\n\t\tdropResult = index === 0 ? {} : monitor.getDropResult()\n\t}\n\treturn dropResult\n}\n\nfunction verifyDropResultType(dropResult: any) {\n\tinvariant(\n\t\ttypeof dropResult === 'undefined' || isObject(dropResult),\n\t\t'Drop result must either be an object or undefined.',\n\t)\n}\n\nfunction getDroppableTargets(monitor: DragDropMonitor) {\n\tconst targetIds = monitor\n\t\t.getTargetIds()\n\t\t.filter(monitor.canDropOnTarget, monitor)\n\ttargetIds.reverse()\n\treturn targetIds\n}\n"]},"metadata":{},"sourceType":"script"}