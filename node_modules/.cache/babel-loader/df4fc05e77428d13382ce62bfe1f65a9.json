{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCollectedProps = useCollectedProps;\n\nvar _useMonitorOutputJs = require(\"./useMonitorOutput.js\");\n\nfunction useCollectedProps(collector, monitor, connector) {\n  return (0, _useMonitorOutputJs).useMonitorOutput(monitor, collector || (() => ({})), () => connector.reconnect());\n}","map":{"version":3,"mappings":";;;;;QAIgBA;;AAFiB,uBAAuB,mCAAvB;;SAEjBA,kBACfC,WACAC,SACAC,WACC;AACD,SAAM,IAACC,mBAAD,EAAiBA,gBAAjB,CAAkBF,OAAlB,EAA2BD,SAAS,YAAY,EAAZ,EAApC,QACLE,SAAS,CAACE,SAAVF,EADK,CAAN;AAGA","names":["useCollectedProps","collector","monitor","connector","useMonitorOutput","reconnect"],"sources":["/Users/davidandtiana/Downloads/chillibean-test/node_modules/react-dnd/src/hooks/useCollectedProps.ts"],"sourcesContent":["import type { Connector } from '../internals/index.js'\nimport type { HandlerManager, MonitorEventEmitter } from '../types/index.js'\nimport { useMonitorOutput } from './useMonitorOutput.js'\n\nexport function useCollectedProps<Collected, Monitor extends HandlerManager>(\n\tcollector: ((monitor: Monitor) => Collected) | undefined,\n\tmonitor: Monitor & MonitorEventEmitter,\n\tconnector: Connector,\n) {\n\treturn useMonitorOutput(monitor, collector || (() => ({} as Collected)), () =>\n\t\tconnector.reconnect(),\n\t)\n}\n"]},"metadata":{},"sourceType":"script"}